package day4;

public class Sample401 {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ
		for(int i = 1;i <= 5;i++){
            System.out.print(i+" ");
        }
        System.out.println();
	}

}
/*
for文の書式
for ( 初期化処理 ; 条件式 ; 増分処理 ){
    処理
}
i=1 として、iが5以下の場合の間、iの値を1増加させる

増分処理のi++とは？インクリメント。


表4-1：インクリメント・デクリメントの処理一覧
演算子	呼び名	                             意味	        該当する演算
i++	インクリメント（後置：こうち）	変数の値を1増加させる。	i=i+1; i+=1;
++i	インクリメント（前置：ぜんち）	変数の値を1増加させる。	i=i+1; i+=1;
i--	デクリメント（後置：こうち）	変数の値を1減少させる。	i=i-1; i-=1;
--i	デクリメント（前置：ぜんち）	変数の値を1減少させる。 i=i-1; i-=1;

int a1=1,b1=1,c1=1,d1=1;
int a2,b2,c2,d2;
a2=a1++;
b2=++b1;
c2=c1--;
d2=--d1;とすると
＞a1 = 2, b1 = 2, c1 = 0, d1 = 0,
  a2 = 1, b2 = 2, c2 = 0, d2 = 0
まず a1 の現在の値が a2 に代入され、その後に a1 の値がインクリメントされます。
具体的には、a1 の値が1で、これが a2 に代入されます。その後、a1 の値が2にインクリメントされます。
まず b1 の値がインクリメントされ、その後に b1 の新しい値が b2 に代入されます。
具体的には、b1 の値が1から2にインクリメントされ、その後 b2 に2が代入されます。
まず c1 の現在の値が c2 に代入され、その後に c1 の値がデクリメントされます。
具体的には、c1 の値が1で、これが c2 に代入されます。その後、c1 の値が0にデクリメントされます。
まず d1 の値がデクリメントされ、その後に d1 の新しい値が d2 に代入されます。
具体的には、d1 の値が1から0にデクリメントされ、その後 d2 に0が代入されます。
別名：ポストインクリメント、プレインクリメント
*/
